openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
  contact:
    name: OurCompany
    url: https://www.ourcompany.com/company/about-ourcompany/contact-us.html
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: macro-controller
    description: Macro Controller
paths:
  /api/v1/macros:
    post:
      tags:
        - macro-controller
      summary: Create a new macros
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Macros'
      responses:
        '200':
          description: Successful response
        '201':
          description: Created
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/macros/all:
    get:
      tags:
        - macro-controller
      summary: Get all available macros
      operationId: findAll
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Macros'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/macros/all/project/{uuid}':
    get:
      tags:
        - macro-controller
      summary: Get all available macros for specified project (including global)
      operationId: findAllByProject
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Macros'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/macros/engines:
    get:
      tags:
        - macro-controller
      summary: Get all available script engines
      operationId: getEngines
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScriptEngine'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/macros/evaluate:
    post:
      tags:
        - macro-controller
      summary: Evaluate specified content
      operationId: evaluate
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                type: string
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/macros/evaluate/context:
    post:
      tags:
        - macro-controller
      summary: Evaluate specified content with context
      operationId: evaluateWithContext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationRequest'
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                type: string
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/macros/global:
    get:
      tags:
        - macro-controller
      summary: Get all available global macros
      operationId: findGlobal
      parameters:
        - name: page
          in: query
          description: page
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: sort
          required: false
          style: form
          schema:
            type: string
        - name: direction
          in: query
          description: direction
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MacrosPage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/macros/project/{uuid}':
    get:
      tags:
        - macro-controller
      summary: Get specified page of all available macros for specified project
      operationId: findByProjectId
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: page
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: size
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: sort
          required: false
          style: form
          schema:
            type: string
        - name: direction
          in: query
          description: direction
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/MacrosPage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/macros/project/{uuid}/all':
    get:
      tags:
        - macro-controller
      summary: Get all macros for specified project
      operationId: findAllByProjectId
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Macros'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/macros/{uuid}':
    put:
      tags:
        - macro-controller
      summary: Update specified macros
      operationId: update
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Macros'
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Macros'
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - macro-controller
      summary: Delete specified macros
      operationId: delete
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
        '204':
          description: No Content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Macros not found
components:
  schemas:
    EvaluationRequest:
      title: EvaluationRequest
      type: object
      properties:
        content:
          type: string
        context:
          type: object
        projectId:
          type: string
          format: uuid
    MacrosParameter:
      title: MacrosParameter
      type: object
      properties:
        defaultValue:
          type: string
        description:
          type: string
        name:
          type: string
        optional:
          type: boolean
        uuid:
          type: string
          format: uuid
    Macros:
      title: Macros
      type: object
      properties:
        content:
          type: string
        createdBy:
          type: string
          format: uuid
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        engine:
          type: string
        modifiedBy:
          type: string
          format: uuid
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/MacrosParameter'
        projectUuid:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
    Pageable:
      title: Pageable
      type: object
      properties:
        offset:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
    MacrosPage:
      title: MacrosPage
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Macros'
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    ScriptEngine:
      title: ScriptEngine
      type: object
      properties:
        key:
          type: string
        name:
          type: string
    Sort:
      title: Sort
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
